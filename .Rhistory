c("ES_median", "VaR"),
c("GOOG" = 2, "AAPL" = 3, "AMZN" = 5),
NULL,
1000,
100,
100,
FALSE
)[["overall_risk_estimates"]]),
c("risk_measure", "risk_est", "alpha", "row_num", "vine_window")
)
expect_true(
checkmate::test_list(
estimate_dependence_and_risk(
test_combined_residuals_dt,
1000,
750, 60,
100, 20,
unique(combined_residuals_dt$asset),
"all", "dvine",
c(0.1, 0.2),
c("ES_median", "VaR"),
c("GOOG" = 2, "AAPL" = 3, "AMZN" = 5),
NULL,
1000,
100,
100,
FALSE
)[["fitted_vines"]],
types = "vinecop"
)
)
# different family_set
expect_true(
checkmate::test_list(
estimate_dependence_and_risk(
test_combined_residuals_dt,
1000,
750, 50,
100, 25,
unique(combined_residuals_dt$asset),
c("clayton", "gumbel", "frank"), "dvine",
c(0.1, 0.2),
c("ES_median", "VaR"),
c("GOOG" = 2, "AAPL" = 3, "AMZN" = 5),
NULL,
1000,
100,
100,
FALSE
)[["fitted_vines"]],
types = "vinecop"
)
)
# other alphas and risk measure
expect_equal(
colnames(estimate_dependence_and_risk(
test_combined_residuals_dt,
1000,
750, 50,
100, 25,
unique(combined_residuals_dt$asset),
"all", "rvine",
0.01,
"ES_mc",
c("GOOG" = 2, "AAPL" = 3, "AMZN" = 5),
NULL,
1000,
100,
100,
FALSE
)[["overall_risk_estimates"]]),
c("risk_measure", "risk_est", "alpha", "row_num", "vine_window")
)
})
estimate_dependence_and_risk(
test_combined_residuals_dt,
1000,
750, 50,
100, 25,
unique(combined_residuals_dt$asset),
"all", "dvine",
c(0.1, 0.2),
c("ES_median", "VaR"),
c("GOOG" = 2, "AAPL" = 3, "AMZN" = 5),
NULL,
1000,
100,
100,
FALSE
)
# rvine
expect_true(
is.null(
estimate_dependence_and_risk(
test_combined_residuals_dt,
1000,
750, 50,
100, 25,
unique(combined_residuals_dt$asset),
"all", "rvine",
c(0.1, 0.2),
c("ES_median", "VaR"),
c("GOOG" = 2, "AAPL" = 3, "AMZN" = 5),
NULL,
1000,
100,
100,
FALSE
)[["cond_risk_estimates"]]
)
)
expect_s3_class(
estimate_dependence_and_risk(
test_combined_residuals_dt,
1000,
750, 50,
100, 25,
unique(combined_residuals_dt$asset),
"all", "rvine",
c(0.1, 0.2),
c("ES_median", "VaR"),
c("GOOG" = 2, "AAPL" = 30, "AMZN" = 5),
NULL,
1000,
100,
100,
FALSE
)[["overall_risk_estimates"]],
"data.table"
)
expect_equal(
colnames(estimate_dependence_and_risk(
test_combined_residuals_dt,
1000,
750, 50,
100, 25,
unique(combined_residuals_dt$asset),
"all", "rvine",
c(0.1, 0.2),
c("ES_median", "VaR"),
c("GOOG" = 2, "AAPL" = 3, "AMZN" = 5),
NULL,
1000,
100,
100,
FALSE
)[["overall_risk_estimates"]]),
c("risk_measure", "risk_est", "alpha", "row_num", "vine_window")
)
expect_true(
checkmate::test_list(
estimate_dependence_and_risk(
test_combined_residuals_dt,
1000,
750, 50,
100, 25,
unique(combined_residuals_dt$asset),
"all", "rvine",
c(0.1, 0.2),
c("ES_median", "VaR"),
c("GOOG" = 2, "AAPL" = 3, "AMZN" = 5),
NULL,
1000,
100,
100,
FALSE
)[["fitted_vines"]],
types = "vinecop"
)
)
# dvine
expect_true(
is.null(
estimate_dependence_and_risk(
test_combined_residuals_dt,
1000,
750, 50,
100, 25,
unique(combined_residuals_dt$asset),
"all", "dvine",
c(0.1, 0.2),
c("ES_median", "VaR"),
c("GOOG" = 2, "AAPL" = 3, "AMZN" = 5),
NULL,
1000,
100,
100,
FALSE
)[["cond_risk_estimates"]]
)
)
expect_s3_class(
estimate_dependence_and_risk(
test_combined_residuals_dt,
1000,
750, 50,
100, 25,
unique(combined_residuals_dt$asset),
"all", "dvine",
c(0.1, 0.2),
c("ES_median", "VaR"),
c("GOOG" = 2, "AAPL" = 3, "AMZN" = 5),
NULL,
1000,
100,
100,
FALSE
)[["overall_risk_estimates"]],
"data.table"
)
expect_equal(
colnames(estimate_dependence_and_risk(
test_combined_residuals_dt,
1000,
750, 50,
100, 25,
unique(combined_residuals_dt$asset),
"all", "dvine",
c(0.1, 0.2),
c("ES_median", "VaR"),
c("GOOG" = 2, "AAPL" = 3, "AMZN" = 5),
NULL,
1000,
100,
100,
FALSE
)[["overall_risk_estimates"]]),
c("risk_measure", "risk_est", "alpha", "row_num", "vine_window")
)
expect_true(
checkmate::test_list(
estimate_dependence_and_risk(
test_combined_residuals_dt,
1000,
750, 60,
100, 20,
unique(combined_residuals_dt$asset),
"all", "dvine",
c(0.1, 0.2),
c("ES_median", "VaR"),
c("GOOG" = 2, "AAPL" = 3, "AMZN" = 5),
NULL,
1000,
100,
100,
FALSE
)[["fitted_vines"]],
types = "vinecop"
)
)
estimate_dependence_and_risk(
test_combined_residuals_dt,
1000,
750, 60,
100, 20,
unique(combined_residuals_dt$asset),
"all", "dvine",
c(0.1, 0.2),
c("ES_median", "VaR"),
c("GOOG" = 2, "AAPL" = 3, "AMZN" = 5),
NULL,
1000,
100,
100,
FALSE
)[["fitted_vines"]]
debugonce(estimate_dependence_and_risk)
estimate_dependence_and_risk(
test_combined_residuals_dt,
1000,
750, 60,
100, 20,
unique(combined_residuals_dt$asset),
"all", "dvine",
c(0.1, 0.2),
c("ES_median", "VaR"),
c("GOOG" = 2, "AAPL" = 3, "AMZN" = 5),
NULL,
1000,
100,
100,
FALSE
)[["fitted_vines"]]
combined_residuals_dt
View(trans_vals)
sim_dt %>%
dtplyr::lazy_dt() %>%
mutate(sample_id = seq(nrow(sim_dt))) %>%
tidyr::pivot_longer(-sample_id, names_to = "asset",
values_to = "sample") %>%
group_by(asset) %>%
# here transform from copula to original scale
mutate(
sample = trans_vals[["mu"]][trans_vals[["asset"]] == asset] +
trans_vals[["sigma"]][trans_vals[["asset"]] == asset] *
rugarch::qdist(
distribution = trans_vals[["marg_dist"]][trans_vals[["asset"]]
== asset],
p = sample,
skew = trans_vals[["skew"]][trans_vals[["asset"]] == asset]
)
)
traceback()
test_that("unconditional case", {
# rvine
expect_true(
is.null(
estimate_dependence_and_risk(
test_combined_residuals_dt,
1000,
750, 50,
100, 25,
unique(combined_residuals_dt$asset),
"all", "rvine",
c(0.1, 0.2),
c("ES_median", "VaR"),
c("GOOG" = 2, "AAPL" = 3, "AMZN" = 5),
NULL,
1000,
100,
100,
FALSE
)[["cond_risk_estimates"]]
)
)
expect_s3_class(
estimate_dependence_and_risk(
test_combined_residuals_dt,
1000,
750, 50,
100, 25,
unique(combined_residuals_dt$asset),
"all", "rvine",
c(0.1, 0.2),
c("ES_median", "VaR"),
c("GOOG" = 2, "AAPL" = 30, "AMZN" = 5),
NULL,
1000,
100,
100,
FALSE
)[["overall_risk_estimates"]],
"data.table"
)
expect_equal(
colnames(estimate_dependence_and_risk(
test_combined_residuals_dt,
1000,
750, 50,
100, 25,
unique(combined_residuals_dt$asset),
"all", "rvine",
c(0.1, 0.2),
c("ES_median", "VaR"),
c("GOOG" = 2, "AAPL" = 3, "AMZN" = 5),
NULL,
1000,
100,
100,
FALSE
)[["overall_risk_estimates"]]),
c("risk_measure", "risk_est", "alpha", "row_num", "vine_window")
)
expect_true(
checkmate::test_list(
estimate_dependence_and_risk(
test_combined_residuals_dt,
1000,
750, 50,
100, 25,
unique(combined_residuals_dt$asset),
"all", "rvine",
c(0.1, 0.2),
c("ES_median", "VaR"),
c("GOOG" = 2, "AAPL" = 3, "AMZN" = 5),
NULL,
1000,
100,
100,
FALSE
)[["fitted_vines"]],
types = "vinecop"
)
)
# dvine
expect_true(
is.null(
estimate_dependence_and_risk(
test_combined_residuals_dt,
1000,
750, 50,
100, 25,
unique(combined_residuals_dt$asset),
"all", "dvine",
c(0.1, 0.2),
c("ES_median", "VaR"),
c("GOOG" = 2, "AAPL" = 3, "AMZN" = 5),
NULL,
1000,
100,
100,
FALSE
)[["cond_risk_estimates"]]
)
)
expect_s3_class(
estimate_dependence_and_risk(
test_combined_residuals_dt,
1000,
750, 50,
100, 25,
unique(combined_residuals_dt$asset),
"all", "dvine",
c(0.1, 0.2),
c("ES_median", "VaR"),
c("GOOG" = 2, "AAPL" = 3, "AMZN" = 5),
NULL,
1000,
100,
100,
FALSE
)[["overall_risk_estimates"]],
"data.table"
)
expect_equal(
colnames(estimate_dependence_and_risk(
test_combined_residuals_dt,
1000,
750, 50,
100, 25,
unique(combined_residuals_dt$asset),
"all", "dvine",
c(0.1, 0.2),
c("ES_median", "VaR"),
c("GOOG" = 2, "AAPL" = 3, "AMZN" = 5),
NULL,
1000,
100,
100,
FALSE
)[["overall_risk_estimates"]]),
c("risk_measure", "risk_est", "alpha", "row_num", "vine_window")
)
expect_true(
checkmate::test_list(
estimate_dependence_and_risk(
test_combined_residuals_dt,
1000,
750, 50,
100, 25,
unique(combined_residuals_dt$asset),
"all", "dvine",
c(0.1, 0.2),
c("ES_median", "VaR"),
c("GOOG" = 2, "AAPL" = 3, "AMZN" = 5),
NULL,
1000,
100,
100,
FALSE
)[["fitted_vines"]],
types = "vinecop"
)
)
# different family_set
expect_true(
checkmate::test_list(
estimate_dependence_and_risk(
test_combined_residuals_dt,
1000,
750, 50,
100, 25,
unique(combined_residuals_dt$asset),
c("clayton", "gumbel", "frank"), "dvine",
c(0.1, 0.2),
c("ES_median", "VaR"),
c("GOOG" = 2, "AAPL" = 3, "AMZN" = 5),
NULL,
1000,
100,
100,
FALSE
)[["fitted_vines"]],
types = "vinecop"
)
)
# other alphas and risk measure
expect_equal(
colnames(estimate_dependence_and_risk(
test_combined_residuals_dt,
1000,
750, 50,
100, 25,
unique(combined_residuals_dt$asset),
"all", "rvine",
0.01,
"ES_mc",
c("GOOG" = 2, "AAPL" = 3, "AMZN" = 5),
NULL,
1000,
100,
100,
FALSE
)[["overall_risk_estimates"]]),
c("risk_measure", "risk_est", "alpha", "row_num", "vine_window")
)
})
document()
rm(list = c("est_risk_measures", "estimate_dependence_and_risk", "estimate_marginal_models"))
document()
load_all()
test()
