[{"path":"https://emanuelsommer.github.io/portvine/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 portvine authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://emanuelsommer.github.io/portvine/articles/get_started.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Get started","text":"sampling within estimation algorithms reproducible fixed seed (also holds parallel processing).","code":"#################### required ####################  library(portvine) #################### optional ####################  ## the following packages are only necessary for the visualizations # for visualization: library(ggplot2) library(patchwork) theme_set(   theme_minimal() +   theme(plot.title = ggtext::element_markdown(size = 11),         plot.subtitle = ggtext::element_markdown(size = 9)) ) # some data wrangling for visualizations library(dplyr) library(tidyr) set.seed(2)"},{"path":"https://emanuelsommer.github.io/portvine/articles/get_started.html","id":"the-data-set","dir":"Articles","previous_headings":"","what":"The data set","title":"Get started","text":"package comes small test data set containing 1000 daily log returns 3 stocks (Apple ~ AAPL, Alphabet ~ GOOG Amazon ~ AMZN). one financial year comprised roughly 250 days one data roughly 4 years. aim now estimate portfolio level risk measures last year .e. interval \\([751,1000]\\). First one specifies marginal assetwise time series models.","code":"data(\"sample_returns_small\") head(sample_returns_small) #>            AAPL          GOOG         AMZN #> 1:  0.005221515 -0.0063910288 -0.016940943 #> 2:  0.019702688  0.0232542613  0.016639145 #> 3:  0.019878308 -0.0006788564 -0.004209719 #> 4: -0.005595481  0.0065947671 -0.000176859 #> 5: -0.024806737 -0.0049333142  0.009580031 #> 6:  0.015416878  0.0113819042  0.018446965 dim(sample_returns_small) #> [1] 1000    3"},{"path":"https://emanuelsommer.github.io/portvine/articles/get_started.html","id":"specify-marginal-models","dir":"Articles","previous_headings":"The data set","what":"Specify marginal models","title":"Get started","text":"One like refit marginal models every two months trading days 50 days. training data size already specified interval interest .e. one uses whole available past first marginal window size 750.","code":""},{"path":"https://emanuelsommer.github.io/portvine/articles/get_started.html","id":"the-unconditional-case","dir":"Articles","previous_headings":"The data set > Specify marginal models","what":"The unconditional case","title":"Get started","text":"unconditional case one deviate default thus marginal models ARMA(1,1)-GARCH(1,1) model fitted. default model can assessed via function default_garch_spec(). marginal model specifications collected marginal_settings object shown .","code":"default_garch_spec() #>  #> *---------------------------------* #> *       GARCH Model Spec          * #> *---------------------------------* #>  #> Conditional Variance Dynamics     #> ------------------------------------ #> GARCH Model      : sGARCH(1,1) #> Variance Targeting   : FALSE  #>  #> Conditional Mean Dynamics #> ------------------------------------ #> Mean Model       : ARFIMA(1,0,1) #> Include Mean     : TRUE  #> GARCH-in-Mean        : FALSE  #>  #> Conditional Distribution #> ------------------------------------ #> Distribution :  sstd  #> Includes Skew    :  TRUE  #> Includes Shape   :  TRUE  #> Includes Lambda  :  FALSE uncond_marg_settings <- marginal_settings(   train_size = 750,   refit_size = 50 )"},{"path":"https://emanuelsommer.github.io/portvine/articles/get_started.html","id":"the-conditional-case","dir":"Articles","previous_headings":"The data set > Specify marginal models","what":"The conditional case","title":"Get started","text":"conditional case one use individual specification. One changes default ARMA(1,2)-GARCH(1,1) model sticking default Amazon stock. next step specify settings vine fitting.","code":"cond_marg_settings <- marginal_settings(   train_size = 750,   refit_size = 50,   individual_spec = list(\"AMZN\" = default_garch_spec()),   default_spec = default_garch_spec(ma = 2) )"},{"path":"https://emanuelsommer.github.io/portvine/articles/get_started.html","id":"specify-vine-copula-models","dir":"Articles","previous_headings":"The data set","what":"Specify vine copula models","title":"Get started","text":"one like refit vine copula models every month every 25 days allowed package 50 dividable 25. One like capture dependence training set 100 trading days rolling window.","code":""},{"path":"https://emanuelsommer.github.io/portvine/articles/get_started.html","id":"the-unconditional-case-1","dir":"Articles","previous_headings":"The data set > Specify vine copula models","what":"The unconditional case","title":"Get started","text":"unconditional case one use default vine_type R-vine. bivariate building blocks vine copula one restrict oneself single parametric pair copulas. possible choices look help page function rvinecopulib::bicop().","code":"uncond_vine_settings <- vine_settings(   train_size = 100,   refit_size = 25,   family_set = \"onepar\", # valid bivariate building blocks   vine_type = \"rvine\" )"},{"path":"https://emanuelsommer.github.io/portvine/articles/get_started.html","id":"the-conditional-case-1","dir":"Articles","previous_headings":"The data set > Specify vine copula models","what":"The conditional case","title":"Get started","text":"conditional case now D-vine copulas allowed. copula families one pick arbitrary ones example. Note “parametric” nonrestrictive valid option . Now one ready perform actual risk measure estimation.","code":"cond_vine_settings <- vine_settings(   train_size = 100,   refit_size = 25,   family_set = c(\"gumbel\", \"joe\", \"t\"),   vine_type = \"dvine\" )"},{"path":"https://emanuelsommer.github.io/portvine/articles/get_started.html","id":"estimate-the-risk-measures","dir":"Articles","previous_headings":"The data set","what":"Estimate the risk measures","title":"Get started","text":"risk measures estimated popular confidence levels 1% 2.5%. terms risk measures one like estimate Value Risk (VaR) expected shortfall (ES) mean estimation based rather small sample size 1000.","code":""},{"path":"https://emanuelsommer.github.io/portvine/articles/get_started.html","id":"the-unconditional-case-2","dir":"Articles","previous_headings":"The data set > Estimate the risk measures","what":"The unconditional case","title":"Get started","text":"equally weighted portfolio three stocks assumed thus one can leave default NULLvalue weights argument. trace argument set TRUE trigger printing basic information training. workhorse function package well suited parallel even nested parallel processing. details look help page consult README performance measurements. one can facilitate basic parallel processing just using commented code. estimated risk measures one can get short detailed summary process printing object calling summary method.","code":"## specify parallel strategy # future::plan(\"multisession\", workers = 4) uncond_risk_roll <- estimate_risk_roll(   data = sample_returns_small,   weights = NULL,   marginal_settings = uncond_marg_settings,   vine_settings = uncond_vine_settings,   alpha = c(0.01, 0.025),   risk_measures = c(\"VaR\", \"ES_mean\"),   n_samples = 1000,   trace = TRUE ) #>  #> Fit marginal models: #> AAPL  GOOG  AMZN   #>  #> Fit vine copula models and estimate risk. #> Vine windows: #> (1/10) (2/10) (3/10) (4/10) (5/10) (6/10) (7/10) (8/10) (9/10) (10/10) ## return to default sequential settings (cut off any background processes) # future::plan(\"sequential\") uncond_risk_roll #> An object of class <portvine_roll> #> Number of ARMA-GARCH/ marginal windows: 5  #> Number of vine windows: 10  #> Risk measures estimated: VaR ES_mean  #> Alpha levels used: 0.01 0.025  #>  #> Time taken: 0.469 minutes summary(uncond_risk_roll) #> An object of class <portvine_roll> #>  #> --- Marginal models --- #> Number of ARMA-GARCH/ marginal windows: 5  #> Train size:  750  #> Refit size:  50  #>  #> --- Vine copula models --- #> Number of vine windows: 10  #> Train size:  100  #> Refit size:  25  #> Vine copula type:  rvine  #> Vine family set:  onepar  #>  #> --- Risk estimation --- #> Risk measures estimated: VaR ES_mean  #> Alpha levels used: 0.01 0.025  #> Number of estimated risk measures: 1000  #> Number of samples for each risk estimation: 1000  #>  #> Time taken: 0.469 minutes."},{"path":"https://emanuelsommer.github.io/portvine/articles/get_started.html","id":"the-conditional-case-2","dir":"Articles","previous_headings":"The data set","what":"The conditional case","title":"Get started","text":"package currently supports two conditioning assets. single conditional case covered double conditional case almost identical. One choose Amazon stock conditioning asset (via cond_vars argument). Furthermore one give Alphabet stock greater weight weight conditioning asset must course zero. Note weights example according market capitalization can even changing vine window granularity level. cond_u argument specifies quantile level conditioning value. small quantile level emulate behavior weak performance conditioning Amazon stock. Details arguments given help page. estimated conditional risk measures one can get short detailed summary process printing object calling summary method.","code":"cond_risk_roll <- estimate_risk_roll(   data = sample_returns_small,   weights = c(\"AAPL\" = 1, \"GOOG\" = 2, \"AMZN\" = 0),   marginal_settings = cond_marg_settings,   vine_settings = cond_vine_settings,   alpha = c(0.01, 0.025),   risk_measures = c(\"VaR\", \"ES_mean\"),   n_samples = 1000,   cond_vars = \"AMZN\",   cond_u = 0.1 ) cond_risk_roll #> An object of class <cond_portvine_roll> #> Conditional variable(s): AMZN  #> Number of ARMA-GARCH/ marginal windows: 5  #> Number of vine windows: 10  #> Risk measures estimated: VaR ES_mean  #> Alpha levels used: 0.01 0.025  #>  #> Time taken: 0.696 minutes summary(cond_risk_roll) #> An object of class <cond_portvine_roll> #>  #> --- Conditional settings --- #> Conditional variable(s): AMZN  #> Number of conditional estimated risk measures: 2000  #> Conditioning quantiles: 0.1  #>  #> --- Marginal models --- #> Number of ARMA-GARCH/ marginal windows: 5  #> Train size:  750  #> Refit size:  50  #>  #> --- Vine copula models --- #> Number of vine windows: 10  #> Train size:  100  #> Refit size:  25  #> Vine copula type:  dvine  #> Vine family set:  gumbel joe t  #>  #> --- Risk estimation --- #> Risk measures estimated: VaR ES_mean  #> Alpha levels used: 0.01 0.025  #> Number of estimated risk measures: 1000  #> Number of samples for each risk estimation: 1000  #>  #> Time taken: 0.696 minutes."},{"path":"https://emanuelsommer.github.io/portvine/articles/get_started.html","id":"assess-marginal-model-quality","dir":"Articles","previous_headings":"The data set","what":"Assess marginal model quality","title":"Get started","text":"order extract marginal models one can use function fitted_marginals(). result named list rugarch::ugarchroll object asset. objects contain fitted marginal time series models. extraction fitted residuals residual analysis portvine package provides utility function roll_residuals(). following opinionated visualization function useful visual residual analysis given used. allows visualize raw standardized residuals, empirical autocorrelation function results (p-values) Ljung-Box tests serial correlation different lags. useful assess appropriateness mean equation ARMA-GARCH model. order assess volatility equation one can look visualization squared standardized residuals. function highly opinionated integrated portvine package. Apply function result unconditional estimation display residual plots Apple Alphabet.   better overview assets, especially higher dimensions, heatmap p-values Ljung-Box tests can useful. now showcase another opinionated utility function. time one uses result conditional risk measure estimation display function residual analysis. \\(h\\) denotes lag.  P-values lower 0.05 highlighted red heatmap easy spotting.","code":"names(fitted_marginals(uncond_risk_roll)) #> [1] \"AAPL\" \"GOOG\" \"AMZN\" # An opinionated function for residual analysis. Note this function has no  # input checks and is not tested in any ways. # Output: named list with a composition of residual plots for each asset marg_resid_viz_list <- function(   roll, # portvine_roll or cond_portvine_roll object   asset_names = NULL, # filter for certain  assets   marg_window = 1, # specify a marginal window   squared = FALSE # if set to true the results for the squared stand. residuals   # are displayed   ) {   fitted_marginals <- fitted_marginals(roll)   if (is.null(asset_names)) asset_names <- fitted_vines(roll)[[1]]$names   sapply(     asset_names,     function(asset_name) {       # use again a utility function from the portvine package to extract the        # fitted standardized residuals       model_resid <- roll_residuals(         fitted_marginals[[asset_name]], marg_window       )       if (squared) model_resid <- model_resid^2        simple_exploratory <- data.frame(resid = model_resid) %>%         mutate(id = seq(length(model_resid))) %>%         ggplot(aes(x = id, y = resid)) +         geom_line(size = 0.2) +         labs(x = \"t\", y = ifelse(squared, expression(z[t]^2),expression(z[t])),              title = asset_name) +         theme(axis.text.x = element_blank(),               axis.ticks.x = element_blank())        acf_plot <- data.frame(         acf = as.numeric(acf(model_resid, type = \"cor\", lag.max = 20,                              plot = FALSE)$acf),         lag = 0:20       ) %>%         filter(lag != 0 & lag <= 10) %>%         ggplot() +         geom_hline(yintercept = 0, col = \"black\", size = 0.3) +         geom_hline(yintercept = qnorm(c(0.025, 0.975)) /                      sqrt(length(model_resid)),                    linetype = \"longdash\", col = \"#92B8DE\", size = 0.5) +         geom_segment(aes(x = lag, xend = lag, y = 0, yend = acf)) +         geom_point(aes(x = lag, y = acf)) +         scale_x_continuous(breaks = seq(1, 10, 1)) +         ylim(-1, 1) +         labs(x = \"h\", y = \"ACF(h)\")        ljungplot <- data.frame(         pval = sapply(           1:10,           function(i) Box.test(model_resid, lag = i,                                type = \"Lju\")$p.value),         lag = 1:10) %>%         ggplot() +         geom_hline(yintercept = 0, col = \"black\", size = 0.3) +         geom_hline(yintercept = 0.05,                    linetype = \"longdash\", col = \"#92B8DE\", size = 0.5) +         geom_line(aes(x = lag, y = pval)) +         geom_point(aes(x = lag, y = pval)) +         scale_x_continuous(breaks = seq(1, 10, 1)) +         labs(x = \"h\", y = \"p-value of Ljung-Box test at lag h\")        (simple_exploratory / (ljungplot + acf_plot)) +         plot_layout(nrow = 2)     }, USE.NAMES = TRUE, simplify = FALSE) } uncond_residual_viz <- marg_resid_viz_list(uncond_risk_roll) uncond_residual_viz_squared <- marg_resid_viz_list(   uncond_risk_roll, squared = TRUE ) uncond_residual_viz$AAPL uncond_residual_viz_squared$GOOG # The function creates a heatmap of Ljung Box test p-values for a  # (cond-)portvine_roll object. Note this function again has no  # input checks and is not tested in any ways. # Output: The heatmap (ggplot2 object) ljung_heatmap <- function(roll, roll_num = 1, squared = FALSE) {   asset_names <- fitted_vines(roll)[[1]]$names   roll_marginals <- fitted_marginals(roll)   ljung_data <- sapply(asset_names, function(asset_name) {     model_resid <- roll_residuals(       roll_marginals[[asset_name]], roll_num = roll_num     )     if (squared) model_resid <- model_resid^2     sapply(       1:10,       function(i) Box.test(model_resid, lag = i, type = \"Lju\")$p.value     )   }, USE.NAMES = TRUE, simplify = TRUE)   ljung_data <- ljung_data %>%     as.data.frame() %>%     mutate(lag = seq(nrow(ljung_data))) %>%     pivot_longer(-lag, names_to = \"asset\", values_to = \"pval\")   if (all(ljung_data$pval >= 0.05)) {     legend_scale <- scale_fill_gradient(       low = \"#92B8DE\", high = \"#2a82db\"     )   } else {     legend_scale <- scale_fill_gradientn(       colours = c(\"#db4f59\",\"#C37285\" ,                   \"#92B8DE\", \"#2a82db\"),       values = scales::rescale(c(0, 0.05 - 0.01, 0.05, 1)),       breaks = c(0.05),       labels = c(0.05),       guide = guide_colourbar(nbin = 1000))   }   ljung_data %>%     ggplot(aes(x = lag, y = asset, fill = pval)) +     geom_tile() +     scale_x_continuous(breaks = 1:10) +     labs(y = \"\", x = \"h\", fill = \"p-value\",          title = \"Results of the Ljung-Box tests\",          caption = paste(\"Rolling window:\", roll_num)) +     legend_scale +     theme(legend.position = \"right\",           panel.grid.minor.x = element_blank()) } ljung_heatmap(uncond_risk_roll)"},{"path":"https://emanuelsommer.github.io/portvine/articles/get_started.html","id":"a-look-at-the-fitted-vine-copulas","dir":"Articles","previous_headings":"The data set","what":"A look at the fitted vine copulas","title":"Get started","text":"Next one can look fitted vine copulas. utility function available portvine package. function fitted_vines() extracts fitted vines list, one vine copula object vine window.  list elements rvinecopulib::vinecop objects one can analyse tools great rvinecopulib package.","code":"uncond_fitted_vines <- fitted_vines(uncond_risk_roll) # visualize the first tree of the R-vine fitted in the third vine window rvinecopulib:::plot.vinecop(   uncond_fitted_vines[[3]],    tree = 1,   var_names = \"use\",   edge_labels = \"family_tau\" )"},{"path":"https://emanuelsommer.github.io/portvine/articles/get_started.html","id":"analyze-the-risk-measure-estimates","dir":"Articles","previous_headings":"The data set","what":"Analyze the risk measure estimates","title":"Get started","text":"last utility function presented vignette risk_estimates() name suggests can used easily extract risk measure estimates estimation result object. One can filter risk measure, confidence levels also choose output data.frame data.table. Moreover optionally calculates logical column indicating whether risk measure exceeded. tidy representation can easily used visualizations. example comparisons risk measures time.  one can explore exceedances.  conditional case one can first look different conditional strategies behave. one side conditioning value based quantile level 0.1 forecasted (shown light blue) side prior residual strategy tries emulate actual behavior conditional asset using prior day residual (shown green).  one can compare resulting conditional risk measure estimates.  course just tip iceberg countless visualizations possible point. Especially multiple conditional quantile levels stress testing scenario. interpretation left exemplary workflows.","code":"## a glimpse at the tidy data.frame with all estimated risk measures head(risk_estimates(uncond_risk_roll), 10) #>    risk_measure    risk_est alpha row_num vine_window    realized #> 1           VaR -0.10454393 0.010     751           1 0.004492802 #> 2           VaR -0.07793607 0.025     751           1 0.004492802 #> 3       ES_mean -0.14119372 0.010     751           1 0.004492802 #> 4       ES_mean -0.11060053 0.025     751           1 0.004492802 #> 5           VaR -0.10024730 0.010     752           1 0.044349642 #> 6           VaR -0.07268996 0.025     752           1 0.044349642 #> 7       ES_mean -0.12261382 0.010     752           1 0.044349642 #> 8       ES_mean -0.09816388 0.025     752           1 0.044349642 #> 9           VaR -0.07810087 0.010     753           1 0.045963725 #> 10          VaR -0.06525622 0.025     753           1 0.045963725  ## a glimpse at the estimated VaR at confidence level 1% with exceeded column head(   risk_estimates(     uncond_risk_roll,     risk_measures = \"VaR\",     alpha = 0.01,     exceeded = TRUE   ),   6 ) #>   risk_measure    risk_est alpha row_num vine_window     realized exceeded #> 1          VaR -0.10454393  0.01     751           1  0.004492802    FALSE #> 2          VaR -0.10024730  0.01     752           1  0.044349642    FALSE #> 3          VaR -0.07810087  0.01     753           1  0.045963725    FALSE #> 4          VaR -0.09509246  0.01     754           1  0.010905472    FALSE #> 5          VaR -0.10696890  0.01     755           1 -0.002581235    FALSE #> 6          VaR -0.08220021  0.01     756           1  0.013140508    FALSE  ## of course also applies for the conditional case head(   risk_estimates(     cond_risk_roll,     risk_measures = \"ES_mean\",     alpha = 0.01,     cond_u = c(\"prior_resid\", 0.1)   ),   6 ) #>   risk_measure    risk_est alpha row_num         AMZN      cond_u vine_window #> 1      ES_mean -0.08557438  0.01     751 -0.018518268         0.1           1 #> 2      ES_mean -0.06680720  0.01     751  0.007347559 prior_resid           1 #> 3      ES_mean -0.10546217  0.01     752 -0.019046492         0.1           1 #> 4      ES_mean -0.05151684  0.01     752  0.004434144 prior_resid           1 #> 5      ES_mean -0.09586411  0.01     753 -0.019629721         0.1           1 #> 6      ES_mean -0.10195091  0.01     753  0.037611821 prior_resid           1 #>      realized #> 1 0.000812683 #> 2 0.000812683 #> 3 0.023087416 #> 4 0.023087416 #> 5 0.041408990 #> 6 0.041408990 risk_estimates(uncond_risk_roll, alpha = 0.025) %>%   ggplot() +   geom_line(aes(x = row_num, y = realized), col = \"grey\") +   geom_line(aes(x = row_num, y = risk_est,                 col = factor(risk_measure))) +   scale_color_manual(values = c(\"#92B8DE\", \"#477042\")) +   labs(x = \"trading day\",        y = \"portfolio log returns\",        col = \"Risk measure\",        title = \"Comparison of unconditional risk measure estimates at         confidence level 2.5%\",        subtitle = paste0(\"Realized log returns in \",                      \"<span style='color:\",                      \"grey\",                      \"'>**grey**<\/span>\",                      \".\")) risk_estimates(   uncond_risk_roll,   risk_measures = c(\"VaR\"),   alpha = 0.01,   exceeded = TRUE) %>%   ggplot() +   geom_line(aes(x = row_num, y = realized), col = \"lightgrey\") +   geom_line(aes(x = row_num, y = risk_est), col = \"#92B8DE\") +   geom_point(aes(x = row_num, y = realized), col = \"#db4f59\",               inherit.aes = FALSE, data = . %>% filter(exceeded)) +   labs(x = \"trading days\",        y = \"portfolio log returns\",        col = \"Exceeded\",        subtitle = paste0(\"Exceedances are highlighted in \",                      \"<span style='color:\",                      \"#db4f59\",                      \"'>**red**<\/span>\",                      \".\"),        title = \"Risk measure: VaR with confidence level 1%\"        ) +   theme(legend.position = \"none\") risk_estimates(   cond_risk_roll,   risk_measures = \"ES_mean\",   alpha = 0.01) %>%   ggplot() +   geom_line(     data = sample_returns_small[751:1000, \"AMZN\"],     aes(x = 751:1000,         y = AMZN), col = \"grey\", size = .3) +   geom_line(aes(x = row_num, y = AMZN, col = factor(cond_u)),             size = 0.5) +   scale_color_manual(values = c(\"#92B8DE\", \"#477042\"),                      name = \"Conditional strategy\") +   labs(title = \"Conditional variable: AMZN\",        x = \"trading days\", y = \"log returns of the asset AMZN\",        subtitle = paste0(\"Realized log returns in \",                      \"<span style='color:\",                      \"grey\",                      \"'>**grey**<\/span>\",                      \".\")) risk_estimates(cond_risk_roll, alpha = 0.025, risk_measures = \"ES_mean\") %>%   ggplot() +   geom_line(aes(x = row_num, y = realized), col = \"grey\") +   geom_line(aes(x = row_num, y = risk_est,                 col = factor(cond_u))) +   scale_color_manual(values = c(\"#477042\", \"#92B8DE\")) +   labs(x = \"trading day\",        y = \"portfolio log returns\",        col = \"Conditional strategy\",        title = \"Comparison of conditional risk measure estimates at         confidence level 2.5%\",        subtitle = paste0(\"Realized log returns in \",                      \"<span style='color:\",                      \"grey\",                      \"'>**grey**<\/span>\",                      \".\"))"},{"path":"https://emanuelsommer.github.io/portvine/articles/get_started.html","id":"backtesting-the-estimated-risk-measures","dir":"Articles","previous_headings":"The data set","what":"Backtesting the estimated risk measures","title":"Get started","text":"risk measure estimation performed many cases performed ultimate goal backtesting mind. can easily achieved given objects returned estimate_risk_roll() function. already excellent resources performing suggestions implementations can applied portfolio level setting: Value Risk backtesting: package rugarch contains straightforward use function rugarch::VaRTest(). features classical backtests based violation sequences. Expected shortfall backtesting: package esback contains suite easy use theoretically backed backtests expected shortfall.","code":""},{"path":"https://emanuelsommer.github.io/portvine/articles/parallel.html","id":"nested-parallel-processing","dir":"Articles","previous_headings":"","what":"Nested parallel processing","title":"Parallel processing","text":"portvine package allows nested parallel processing .e.two levels parallel processes. levels following. first level allows fit univariate time series models asset parallel fit vine window parallel. second level allows specified within vine window time units, often days, processed using parallel processes. one use notation \\(p_1\\)/\\(p_2\\) possible parallel strategies \\(p_1\\) specifies number parallel processes/cores first level \\(p_2\\) number parallel processes/cores every first level process can turn call. means 1/1 default sequential case, 5/1 use first level parallelization 8/2 require 16 cores every first level parallel process can use 2 parallel processes iterating time units/days. illustration nested parallelization vine windows can found .","code":""},{"path":"https://emanuelsommer.github.io/portvine/articles/parallel.html","id":"performance-measurements","dir":"Articles","previous_headings":"","what":"Performance measurements","title":"Parallel processing","text":"measurements performed Linux Cluster Leibniz Supercomputing Centre. provided computational resources gratefully acknowledged. used R version 3.6.0. Throughout measurements one always estimate VaR ES two \\(\\alpha\\) levels .","code":""},{"path":"https://emanuelsommer.github.io/portvine/articles/parallel.html","id":"the-unconditional-case","dir":"Articles","previous_headings":"Performance measurements","what":"The unconditional case","title":"Parallel processing","text":"Especially 100000 samples use 40 cores 10/4 instead 20 cores 10/2 pays almost linearly. maximum strategy 10/25 achieves great runtime 7 minutes. reasonable sample size 10000 one can see already 20 cores one can achieve quite quick runtime roughly 5 minutes. Also seems reasonable assign many parallel processes possible number vine windows first level parallelization assign many additional processes second level parallelization. however changes really large sample sizes can seen assigning lots processes second level might pay . evident looking strategy 1/25.","code":""},{"path":"https://emanuelsommer.github.io/portvine/articles/parallel.html","id":"the-conditional-case","dir":"Articles","previous_headings":"Performance measurements","what":"The conditional case","title":"Parallel processing","text":"conditional approach performs almost identical single two conditional variables one displays just performance measures single conditional case. Furthermore one estimate two quantile levels \\(\\alpha^\\)/cond_u 5% 50%. conditional risk measure estimation approach expected longer runtimes mostly due fact specified quantile level cond_u additional prior residual risk estimates one sample \\(S\\)/n_samples conditional samples. specified two quantile levels means one samples 3 times many conditional samples unconditional samples unconditional risk estimation approach. Moreover overhead conditional estimation slightly higher.  annotated plot observation maximal strategy 10/25 samplesize 100000 corresponds estimation 1 conditional quantile 2 conditional quantiles come extensive memory requirements >100Gb. fact one directly expects estimation roughly 33% faster. even adjusting expected 33% faster result one observes drop another 44% runtime particular parallel strategy.   hope measurements help little choosing appropriate parallel strategy needs.","code":""},{"path":"https://emanuelsommer.github.io/portvine/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Emanuel Sommer. Maintainer, author.","code":""},{"path":"https://emanuelsommer.github.io/portvine/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sommer E (2022). portvine: Portfolio level (un)conditional risk measure estimation backtesting using vine copula ARMA-GARCH models. https://github.com/EmanuelSommer/portvine, https://emanuelsommer.github.io/portvine/.","code":"@Manual{,   title = {portvine: Portfolio level (un)conditional risk measure estimation for backtesting using vine copula and ARMA-GARCH models},   author = {Emanuel Sommer},   year = {2022},   note = {https://github.com/EmanuelSommer/portvine, https://emanuelsommer.github.io/portvine/}, }"},{"path":"https://emanuelsommer.github.io/portvine/index.html","id":"portvine-","dir":"","previous_headings":"","what":"Portfolio level (un)conditional risk measure estimation for backtesting using vine copula and ARMA-GARCH models","title":"Portfolio level (un)conditional risk measure estimation for backtesting using vine copula and ARMA-GARCH models","text":"Portfolio level unconditional well conditional risk measure estimation backtesting using vine copula ARMA-GARCH models.","code":""},{"path":"https://emanuelsommer.github.io/portvine/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Portfolio level (un)conditional risk measure estimation for backtesting using vine copula and ARMA-GARCH models","text":"can install development version portvine GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"EmanuelSommer/portvine\")"},{"path":"https://emanuelsommer.github.io/portvine/index.html","id":"what-it-does-and-why","dir":"","previous_headings":"","what":"What it does and why","title":"Portfolio level (un)conditional risk measure estimation for backtesting using vine copula and ARMA-GARCH models","text":"implemented algorithms unconditional well conditional portfolio level risk measure estimation based masters thesis chair Mathematical Statistics TUM link soon going published. general idea unconditional risk measure estimation approach summarized flowchart d-dimensional portfolio.  single conditional approach general idea d-dimensional portfolio market index summarized flowchart .  want get hands dirty fast Get Started vignette perfect fit showcases minimal case study lot code examples handy visualization functions incorporated package highly opinionated. order really grasp going hood look Theory vignette advised starting use package. important algorithms used risk measure estimation explained. doesn’t saturate hunger theory behind package take look masters thesis (published course). Moreover help pages quite detailed feel free look .","code":""},{"path":"https://emanuelsommer.github.io/portvine/index.html","id":"parallel-processing","dir":"","previous_headings":"","what":"Parallel processing","title":"Portfolio level (un)conditional risk measure estimation for backtesting using vine copula and ARMA-GARCH models","text":"risk estimation algorithms implemented package lend perfectly parallel processing. package enabled humble opinion amazing future framework. details please look detailed section parallel processing within help page estimate_risk_roll() function (function reference package website). performance measurements different parallel strategies information implemented parallelisms presented Parallel processing article package website.","code":""},{"path":"https://emanuelsommer.github.io/portvine/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Portfolio level (un)conditional risk measure estimation for backtesting using vine copula and ARMA-GARCH models","text":"package built shoulder giants importantly R packages rvinecopulib rugarch. Thus big thanks goes contributors maintainers! Also like thank supervisors Prof. Claudia Czado M.Sc. Karoline Bax giving opportunity work project dedicated supervision!","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/default_garch_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Default specifications for ARMA-GARCH models — default_garch_spec","title":"Default specifications for ARMA-GARCH models — default_garch_spec","text":"function used default univariate model fitting .e. marginal models can used easily specify different individual marginal model specification default marginal_settings(). ARMA(ar,ma)-GARCH(arch,garch) fitted  distribution given dist specifies conditional density used innovations.","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/default_garch_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default specifications for ARMA-GARCH models — default_garch_spec","text":"","code":"default_garch_spec(ar = 1, ma = 1, arch = 1, garch = 1, dist = \"sstd\")"},{"path":"https://emanuelsommer.github.io/portvine/reference/default_garch_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default specifications for ARMA-GARCH models — default_garch_spec","text":"ar positive integer autoregressive order ma positive integer moving average order arch positive integer ARCH order garch positive integer GARCH order dist single character value possible distributions allowed rugarch::ugarchspec","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/default_garch_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default specifications for ARMA-GARCH models — default_garch_spec","text":"object class rugarch::ugarchspec","code":""},{"path":[]},{"path":"https://emanuelsommer.github.io/portvine/reference/default_garch_spec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default specifications for ARMA-GARCH models — default_garch_spec","text":"","code":"# the default is then just using default_garch_spec() #>  #> *---------------------------------* #> *       GARCH Model Spec          * #> *---------------------------------* #>  #> Conditional Variance Dynamics \t #> ------------------------------------ #> GARCH Model\t\t: sGARCH(1,1) #> Variance Targeting\t: FALSE  #>  #> Conditional Mean Dynamics #> ------------------------------------ #> Mean Model\t\t: ARFIMA(1,0,1) #> Include Mean\t\t: TRUE  #> GARCH-in-Mean\t\t: FALSE  #>  #> Conditional Distribution #> ------------------------------------ #> Distribution\t:  sstd  #> Includes Skew\t:  TRUE  #> Includes Shape\t:  TRUE  #> Includes Lambda\t:  FALSE  #>  # to specify a ARMA(2,2)-GARCH(1,1) model with normal residual distribution default_garch_spec(ar = 2, ma = 2, dist = \"norm\") #>  #> *---------------------------------* #> *       GARCH Model Spec          * #> *---------------------------------* #>  #> Conditional Variance Dynamics \t #> ------------------------------------ #> GARCH Model\t\t: sGARCH(1,1) #> Variance Targeting\t: FALSE  #>  #> Conditional Mean Dynamics #> ------------------------------------ #> Mean Model\t\t: ARFIMA(2,0,2) #> Include Mean\t\t: TRUE  #> GARCH-in-Mean\t\t: FALSE  #>  #> Conditional Distribution #> ------------------------------------ #> Distribution\t:  norm  #> Includes Skew\t:  FALSE  #> Includes Shape\t:  FALSE  #> Includes Lambda\t:  FALSE  #>"},{"path":"https://emanuelsommer.github.io/portvine/reference/est_es.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the Expected Shortfall (ES) — est_es","title":"Estimate the Expected Shortfall (ES) — est_es","text":"Expected Shortfall level \\(\\alpha\\) defined expected value returns condition returns smaller Value Risk \\(\\alpha\\) level. Note absolutely continuous distribution returns assumed. three estimation methods : mean mean samples fall corresponding VaR. median median samples fall corresponding VaR. mc Calculation expected value using Monte Carlo integration \\(\\alpha\\) levels. One draws mc_samples Monte Carlo samples .","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/est_es.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the Expected Shortfall (ES) — est_es","text":"","code":"est_es(sample, alpha, method = c(\"mean\", \"median\", \"mc\"), mc_samples = 100)"},{"path":"https://emanuelsommer.github.io/portvine/reference/est_es.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the Expected Shortfall (ES) — est_es","text":"sample Numeric vector representing sample upon Expected Shortfall calculated. alpha Numeric vector entries (0,1) specifying levels ES calculated. method Method estimation one mean, median, mc. information see Description section. mc_samples Number Monte Carlo samples used mc method.","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/est_es.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the Expected Shortfall (ES) — est_es","text":"Numeric vector Expected Shortfall estimates (length alpha).","code":""},{"path":[]},{"path":"https://emanuelsommer.github.io/portvine/reference/est_es.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the Expected Shortfall (ES) — est_es","text":"","code":"est_es(0:100, c(0.1, 0.2, 0.3)) #> [1]  5 10 15"},{"path":"https://emanuelsommer.github.io/portvine/reference/est_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the Value at Risk (VaR) — est_var","title":"Estimate the Value at Risk (VaR) — est_var","text":"VaR defined empirical \\(\\alpha\\) level quantile empirical distribution based return sample.","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/est_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the Value at Risk (VaR) — est_var","text":"","code":"est_var(sample, alpha)"},{"path":"https://emanuelsommer.github.io/portvine/reference/est_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the Value at Risk (VaR) — est_var","text":"sample Numeric vector representing sample upon Value Risk calculated. alpha Numeric vector entries (0,1) specifying levels VaR calculated.","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/est_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the Value at Risk (VaR) — est_var","text":"Numeric vector VaR estimates (length alpha).","code":""},{"path":[]},{"path":"https://emanuelsommer.github.io/portvine/reference/est_var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate the Value at Risk (VaR) — est_var","text":"","code":"est_var(0:100, c(0.1, 0.2, 0.3)) #> [1] 10 20 30"},{"path":"https://emanuelsommer.github.io/portvine/reference/estimate_risk_roll.html","id":null,"dir":"Reference","previous_headings":"","what":"(Un-)conditional rolling risk estimation using vine copulas — estimate_risk_roll","title":"(Un-)conditional rolling risk estimation using vine copulas — estimate_risk_roll","text":"main workhorse function lot going hood advised look vignettes even better package website provide detailed hands theoretical documentation function intended used. short summarized explanation look Details section .","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/estimate_risk_roll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Un-)conditional rolling risk estimation using vine copulas — estimate_risk_roll","text":"","code":"estimate_risk_roll(   data,   weights = NULL,   marginal_settings,   vine_settings,   alpha = 0.05,   risk_measures = c(\"VaR\", \"ES_mean\"),   n_samples = 1000,   cond_vars = NULL,   cond_u = 0.05,   n_mc_samples = 1000,   trace = FALSE,   cutoff_depth = NULL )"},{"path":"https://emanuelsommer.github.io/portvine/reference/estimate_risk_roll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Un-)conditional rolling risk estimation using vine copulas — estimate_risk_roll","text":"data Matrix, data.frame object coercible data.table storing numeric asset returns named columns (least 3). Moreover missing values must imputed beforehand. weights Corresponding named non-negative weights assets (conditioning variables must weight 0). Default NULL gives equal weight non conditional asset. Alternatively one can use matrix many rows vine windows changing weights. matrix must column names corresponding assets conditional assets weight 0. marginal_settings marginal_settings S4 object containing needed information ARMA-GARCH .e. marginal models fitting. Note marginal_settings vine_settings objects match described . vine_settings vine_settings S4 object containing needed information vine copula model fitting. Note marginal_settings vine_settings objects match described . alpha Numeric vector specifying confidence levels (0,1) risk measures calculated. risk_measures Character vector valid choices risk measures estimate. Currently available Value Risk VaR implemented est_var() 3 estimation methods Expected Shortfall ES_mean, ES_median ES_mc implemented est_es() . n_samples Positive count samples used base risk measure estimation. cond_vars Names variables sample conditionally (currently \\(\\le 2\\) variables). cond_u Numeric vector specifying corresponding quantiles (0,1) conditional variable(s) conditioned conditional risk measures calculated. Additionally always conditioning values corresponding residual one time unit prior used conditional variables (cond_u = 'prior_resid' risk measure output). n_mc_samples Positive count samples Monte Carlo integration risk measure ES_mc used. (See est_es()) trace set TRUE algorithm print little information running. cutoff_depth Positive count specifies depth edges constructed D-vine copula considered algorithm determines ordering D-vine fitting using partial correlations. default NULL considers edges seems use cases reasonable. argument relevant D-vines used.","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/estimate_risk_roll.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Un-)conditional rolling risk estimation using vine copulas — estimate_risk_roll","text":"unconditional case S4 object class portvine_roll conditional case child class cond_portvine_roll. details see portvine_roll.","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/estimate_risk_roll.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Un-)conditional rolling risk estimation using vine copulas — estimate_risk_roll","text":"Roughly speaking function performs following steps unconditional risk measure estimation: Fit asset marginal time series models .e. ARMA-GARCH models rolling window fashion. models well rolling window size training size specified via marginal_settings argument. Model dependence assets vine copula model trained standardized residuals transformed copula scale via probability integral transform. also performed rolling window fashion one can use window size vine windows used marginal ones smaller window size. window size, training size vine copula well copula fitting arguments specified via vine_settings argument. Using copula forecasted means volatilities assets one simulates n_samples many forecasted portfolio level log returns every time unit every specified rolling window. Based samples one estimates portfolio level risk measures. Additionally one can perform conditional risk measure estimation two conditional log return series like market indices. Using approach change marginal models part copula D-vine special ordering .e. index indices fixed rightmost leafs fitted. One simulates conditional forecasted portfolio log returns results conditional risk measure estimates can particularly interesting stress testing like situations. One conditions pre-specified quantile level (cond_u) conditioning assets (cond_vars) comparison one also conditions behavior conditioning asset one time unit .","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/estimate_risk_roll.html","id":"matching-marginal-and-vine-settings","dir":"Reference","previous_headings":"","what":"Matching marginal and vine settings","title":"(Un-)conditional rolling risk estimation using vine copulas — estimate_risk_roll","text":"First must least 2 marginal windows. Thus train_size + refit_size slot marginal_settings class object must smaller overall input data size. Moreover refit_size marginal models must dividable refit_size vine copula models e.g. possible combinations 50 50, 50 25, 50 10. Furthermore train_size vines must smaller equal train_size marginal models.","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/estimate_risk_roll.html","id":"parallel-processing","dir":"Reference","previous_headings":"","what":"Parallel processing","title":"(Un-)conditional rolling risk estimation using vine copulas — estimate_risk_roll","text":"function uses future framework parallelization allows maximum flexibility user safe speedups example regarding random number generation. default course standard non parallel sequential evaluation. user nothing order default work. user wants run code parallel many options parallel single machine high performance compute (HPC) cluster, just one setting switch .e. calling function future::plan() respective argument function call. Common options future::plan(\"multisession\") works major operating systems uses available cores run code parallel local R sessions. specify number workers use future::plan(\"multisession\", workers = 2). go back sequential processing shut parallel sessions use future::plan(\"sequential\"). information look future::plan(). two following loops processed parallel default parallel future::plan() set: marginal model fitting .e. assets individually parallel. vine windows .e. risk estimates corresponding vine copula models computed parallel rolling vine window. addition function allows nested parallelization done care. addition 2 loops one can run computation time unit vine windows parallel might especially interesting n_samples argument large. default parallelization tweaked parallelize first level parallelization 2 loops . can achieved e.g. via future::plan(list(future::tweak(future::multisession, workers = 4), future::tweak(future::multisession, workers = 2))). setting run 2 primary loops 4 parallel R sessions addition 4 primary parallel sessions use 2 sessions within nested parallel loop time units vine window. results need least 2 times 4 8 threads hardware side. details can found extensive documentation future framework.","code":""},{"path":[]},{"path":"https://emanuelsommer.github.io/portvine/reference/estimate_risk_roll.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"(Un-)conditional rolling risk estimation using vine copulas — estimate_risk_roll","text":"Emanuel Sommer","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/estimate_risk_roll.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"(Un-)conditional rolling risk estimation using vine copulas — estimate_risk_roll","text":"","code":"# For better illustrated examples have a look at the vignettes # and/or the package website. if (FALSE) { data(\"sample_returns_small\") ex_marg_settings <- marginal_settings(   train_size = 800,   refit_size = 100 ) ex_vine_settings <- vine_settings(   train_size = 100,   refit_size = 50,   family_set = c(\"gaussian\", \"gumbel\"),   vine_type = \"dvine\" ) # unconditionally risk_roll <- estimate_risk_roll(   sample_returns_small,   weights = NULL,   marginal_settings = ex_marg_settings,   vine_settings = ex_vine_settings,   alpha = c(0.01, 0.05),   risk_measures = c(\"VaR\", \"ES_mean\"),   n_samples = 1000,   trace = FALSE ) # conditional on one asset risk_roll_cond <- estimate_risk_roll(   sample_returns_small,   weights = NULL,   marginal_settings = ex_marg_settings,   vine_settings = ex_vine_settings,   alpha = c(0.01, 0.05),   risk_measures = c(\"VaR\", \"ES_mean\"),   n_samples = 1000,   cond_vars = \"GOOG\",   cond_u = c(0.05, 0.5),   trace = FALSE )  # have a superficial look risk_roll_cond # a slightly more detailed look summary(risk_roll_cond)  # actually use the results by extracting important fitted quantities fitted_vines(risk_roll_cond) fitted_marginals(risk_roll_cond)  # and of course most importantly the risk measure estimates risk_estimates(   risk_roll, risk_measures = \"ES_mean\",   alpha = 0.05, exceeded = TRUE ) risk_estimates(   risk_roll_cond, risk_measures = \"ES_mean\",   alpha = 0.05, exceeded = TRUE,   cond_u = c(\"prior_resid\", 0.5) ) }"},{"path":"https://emanuelsommer.github.io/portvine/reference/fitted_marginals.html","id":null,"dir":"Reference","previous_headings":"","what":"Accessor method for the fitted marginal models of (cond_)portvine_roll\nobjects — fitted_marginals","title":"Accessor method for the fitted marginal models of (cond_)portvine_roll\nobjects — fitted_marginals","text":"Extract marginal models ARMA-GARCH models fitted rolling window fashion using rugarch::ugarchroll. residual analysis models encompassed rugarch::ugarchroll class object one can look utility function roll_residuals().","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/fitted_marginals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accessor method for the fitted marginal models of (cond_)portvine_roll\nobjects — fitted_marginals","text":"","code":"fitted_marginals(roll, ...)  # S4 method for portvine_roll fitted_marginals(roll)"},{"path":"https://emanuelsommer.github.io/portvine/reference/fitted_marginals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accessor method for the fitted marginal models of (cond_)portvine_roll\nobjects — fitted_marginals","text":"roll Object class portvine_roll child class ... Additional parameters child class methods","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/fitted_marginals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accessor method for the fitted marginal models of (cond_)portvine_roll\nobjects — fitted_marginals","text":"Named list entry asset containing rugarch::ugarchroll class object encompasses marginal model fit.","code":""},{"path":[]},{"path":"https://emanuelsommer.github.io/portvine/reference/fitted_vines.html","id":null,"dir":"Reference","previous_headings":"","what":"Accessor method for the fitted vine copula models of (cond_)portvine_roll\nobjects — fitted_vines","title":"Accessor method for the fitted vine copula models of (cond_)portvine_roll\nobjects — fitted_vines","text":"Accessor method fitted vine copula models (cond_)portvine_roll objects","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/fitted_vines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accessor method for the fitted vine copula models of (cond_)portvine_roll\nobjects — fitted_vines","text":"","code":"fitted_vines(roll, ...)  # S4 method for portvine_roll fitted_vines(roll)"},{"path":"https://emanuelsommer.github.io/portvine/reference/fitted_vines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accessor method for the fitted vine copula models of (cond_)portvine_roll\nobjects — fitted_vines","text":"roll Object class portvine_roll child class ... Additional parameters child class methods","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/fitted_vines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accessor method for the fitted vine copula models of (cond_)portvine_roll\nobjects — fitted_vines","text":"List rvinecopulib::vinecop class objects entry corresponds one fitted vine copula model respective vine window.","code":""},{"path":[]},{"path":"https://emanuelsommer.github.io/portvine/reference/marginal_settings-class.html","id":null,"dir":"Reference","previous_headings":"","what":"S4 class for the marginal settings — marginal_settings-class","title":"S4 class for the marginal settings — marginal_settings-class","text":"Specify marginal models (individual_spec & default_specs) fitted often refit well big training data set . Remember forecasting done rolling window fashion arguments (train refit size) match arguments also specified vine_settings.","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/marginal_settings-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S4 class for the marginal settings — marginal_settings-class","text":"","code":"marginal_settings(   train_size,   refit_size,   individual_spec = list(),   default_spec = default_garch_spec() )  # S4 method for marginal_settings show(object)"},{"path":"https://emanuelsommer.github.io/portvine/reference/marginal_settings-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S4 class for the marginal settings — marginal_settings-class","text":"train_size equivalent slot definition refit_size equivalent slot definition individual_spec equivalent slot definition default_spec equivalent slot definition object object class marginal_settings","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/marginal_settings-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S4 class for the marginal settings — marginal_settings-class","text":"Object class marginal_settings","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/marginal_settings-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"S4 class for the marginal settings — marginal_settings-class","text":"specifying list individual_spec argument default_spec function default_garch_spec() might come handy.","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/marginal_settings-class.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"S4 class for the marginal settings — marginal_settings-class","text":"marginal_settings: Class constructor taking arguments specified slots ","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/marginal_settings-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"S4 class for the marginal settings — marginal_settings-class","text":"train_size Positive count specifying training data size. refit_size Positive count specifying size forecasting window. individual_spec named list. Specify ARMA-GARCH models individual assets naming list entry asset providing rugarch::ugarchspec object. default_spec rugarch::ugarchspec object specifying default marginal model (used marginal model specified individual_spec)","code":""},{"path":[]},{"path":"https://emanuelsommer.github.io/portvine/reference/marginal_settings-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S4 class for the marginal settings — marginal_settings-class","text":"","code":"# the most basic initialization marginal_settings(train_size = 100, refit_size = 10) #> An object of class <marginal_settings> #> train_size: 100  #> refit_size: 10  #> No custom specifications. # some individualism marginal_settings(   train_size = 100, refit_size = 10,   individual_spec = list(\"GOOG\" = default_garch_spec(ar = 3)),   default_spec = default_garch_spec(dist = \"norm\") ) #> An object of class <marginal_settings> #> train_size: 100  #> refit_size: 10  #> Custom specifications were given for assets: #>  GOOG"},{"path":"https://emanuelsommer.github.io/portvine/reference/portvine_roll-class.html","id":null,"dir":"Reference","previous_headings":"","what":"S4 output class for the function estimate_risk_roll() — portvine_roll-class","title":"S4 output class for the function estimate_risk_roll() — portvine_roll-class","text":"main output class function estimate_risk_roll()portvine_roll conditional case child class cond_portvine_roll extra slots (visible !C!) returned.","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/portvine_roll-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S4 output class for the function estimate_risk_roll() — portvine_roll-class","text":"","code":"# S4 method for portvine_roll show(object)  # S4 method for cond_portvine_roll show(object)  # S4 method for portvine_roll summary(object)  # S4 method for cond_portvine_roll summary(object)"},{"path":"https://emanuelsommer.github.io/portvine/reference/portvine_roll-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S4 output class for the function estimate_risk_roll() — portvine_roll-class","text":"object object class portvine_roll cond_portvine_roll","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/portvine_roll-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S4 output class for the function estimate_risk_roll() — portvine_roll-class","text":"object class portvine_rollobject class cond_portvine_roll","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/portvine_roll-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"S4 output class for the function estimate_risk_roll() — portvine_roll-class","text":"easy access important slots filtering functionality look accessor methods risk_estimates(), fitted_vines(), fitted_marginals().","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/portvine_roll-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"S4 output class for the function estimate_risk_roll() — portvine_roll-class","text":"risk_estimates data.table columns risk_measure, risk_est, alpha, row_num, vine_window realized (samples also conditional case used) fitted_marginals named list entry asset containing rugarch::ugarchroll class object encompasses marginal model fit. fitted_vines list rvinecopulib::vinecop class objects entry corresponds one vine window. marginal_settings containing specification used ARMA-GARCH fitting .e. marginal models. class marginal_settings. vine_settings containing specifications used vine fitting. class vine_settings. risk_measures character vector displaying estimated risk measures. alpha numeric vector (0,1) displaying confidence levels used estimating risk measures. weights numeric positive weights assets. (Matrix row corresponding one vine window) weights conditional variables always 0. cond_estimation logical value indicating whether conditional estimation approach risk measures used. n_samples positive numeric count displaying many return samples used risk measure estimation. time_taken numeric value displaying many minutes whole estimation process took. cond_risk_estimates !C! data.table columns risk_estimate slot + additional conditional columns respective conditioning value column character cond_u indicates used conditional quantile level conditional value corresponding residual one time unit prior \"prior_resid\". cond_vars !C! character vector names variables used sample conditionally . cond_u !C! numeric vector specifying corresponding quantiles (0,1) conditional variable(s) conditioned conditional risk measures calculated.","code":""},{"path":[]},{"path":"https://emanuelsommer.github.io/portvine/reference/risk_estimates.html","id":null,"dir":"Reference","previous_headings":"","what":"Accessor methods for the risk estimates of (cond_)portvine_roll objects — risk_estimates","title":"Accessor methods for the risk estimates of (cond_)portvine_roll objects — risk_estimates","text":"Accessor methods risk estimates (cond_)portvine_roll objects","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/risk_estimates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accessor methods for the risk estimates of (cond_)portvine_roll objects — risk_estimates","text":"","code":"risk_estimates(   roll,   risk_measures = NULL,   alpha = NULL,   df = TRUE,   exceeded = FALSE,   ... )  # S4 method for portvine_roll risk_estimates(   roll,   risk_measures = NULL,   alpha = NULL,   df = TRUE,   exceeded = FALSE )  # S4 method for cond_portvine_roll risk_estimates(   roll,   risk_measures = NULL,   alpha = NULL,   df = TRUE,   exceeded = FALSE,   cond = TRUE,   cond_u = NULL )"},{"path":"https://emanuelsommer.github.io/portvine/reference/risk_estimates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accessor methods for the risk estimates of (cond_)portvine_roll objects — risk_estimates","text":"roll Object class portvine_roll child class risk_measures Character vector risk measures filter . Note must fitted roll argument. default return fitted risk measures alpha Numeric \\(\\alpha\\) levels estimated risk measures filter . Note must fitted roll argument. default return fitted \\(\\alpha\\) levels df Logical value TRUE data.frame returned otherwise data.table returned. exceeded Logical value. set TRUE column named exceeded appended contains logical values telling whether realized portfolio value exceeded estimated risk. ... Additional parameters child class methods cond set TRUE returns conditional risk estimates otherwise returns overall risk estimates. cond_u Numeric character vector specifying corresponding quantiles (0,1) conditional variable(s) conditioned conditional risk measures calculated filter /class \"prior_resid\". Note must fitted roll argument. default return fitted risk measures.","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/risk_estimates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accessor methods for the risk estimates of (cond_)portvine_roll objects — risk_estimates","text":"(Un-)filtered data.frame data.table (see df argument) least columns risk_measure, risk_est, alpha, row_num, vine_window realized. exceeded column corresponding argument set TRUE. conditional case columns available (see: portvine_roll).","code":""},{"path":[]},{"path":"https://emanuelsommer.github.io/portvine/reference/roll_residuals.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract fitted residuals from a uGARCHroll object — roll_residuals","title":"Extract fitted residuals from a uGARCHroll object — roll_residuals","text":"rugarch::ugarchroll class object encompasses fitting information number models fitted rolling window fashion. utility function gives easy interface extract fitted residuals one models. can especially helpful assessing model quality residual analysis.","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/roll_residuals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract fitted residuals from a uGARCHroll object — roll_residuals","text":"","code":"roll_residuals(ugarchroll, roll_num = 1)"},{"path":"https://emanuelsommer.github.io/portvine/reference/roll_residuals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract fitted residuals from a uGARCHroll object — roll_residuals","text":"ugarchroll Object class rugarch::ugarchroll. roll_num Count specifies fitted model extract residuals .","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/roll_residuals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract fitted residuals from a uGARCHroll object — roll_residuals","text":"Numeric vector fitted residuals.","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/sample_returns_small.html","id":null,"dir":"Reference","previous_headings":"","what":"A sample of log returns for 3 assets. — sample_returns_small","title":"A sample of log returns for 3 assets. — sample_returns_small","text":"Data extracted Yahoo Finance representing daily log returns Google, Apple, Amazon stocks 2014-01-13 2018-01-01 results exactly 1000 observations.","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/sample_returns_small.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A sample of log returns for 3 assets. — sample_returns_small","text":"","code":"data(sample_returns_small)"},{"path":"https://emanuelsommer.github.io/portvine/reference/sample_returns_small.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A sample of log returns for 3 assets. — sample_returns_small","text":"data.table 3 columns 1000 rows, columns GOOG, AAPL, AMZN contain daily log return 3 stocks.","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/sample_returns_small.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A sample of log returns for 3 assets. — sample_returns_small","text":"Yahoo Finance","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/sample_returns_small.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A sample of log returns for 3 assets. — sample_returns_small","text":"","code":"data(sample_returns_small) head(sample_returns_small) #>            AAPL          GOOG         AMZN #> 1:  0.005221515 -0.0063910288 -0.016940943 #> 2:  0.019702688  0.0232542613  0.016639145 #> 3:  0.019878308 -0.0006788564 -0.004209719 #> 4: -0.005595481  0.0065947671 -0.000176859 #> 5: -0.024806737 -0.0049333142  0.009580031 #> 6:  0.015416878  0.0113819042  0.018446965"},{"path":"https://emanuelsommer.github.io/portvine/reference/vine_settings-class.html","id":null,"dir":"Reference","previous_headings":"","what":"S4 class for the vine settings — vine_settings-class","title":"S4 class for the vine settings — vine_settings-class","text":"Specify vine copula models fitted often refit well big training data set . Remember estimation process done rolling window fashion arguments (train refit size) match arguments also specified marginal_settings.","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/vine_settings-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S4 class for the vine settings — vine_settings-class","text":"","code":"vine_settings(train_size, refit_size, family_set = \"all\", vine_type = \"rvine\")  # S4 method for vine_settings show(object)"},{"path":"https://emanuelsommer.github.io/portvine/reference/vine_settings-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S4 class for the vine settings — vine_settings-class","text":"train_size equivalent slot definition refit_size equivalent slot definition family_set equivalent slot definition vine_type equivalent slot definition object object class vine_settings","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/vine_settings-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S4 class for the vine settings — vine_settings-class","text":"Object class vine_settings","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/vine_settings-class.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"S4 class for the vine settings — vine_settings-class","text":"vine_settings: Class constructor taking arguments specified slots ","code":""},{"path":"https://emanuelsommer.github.io/portvine/reference/vine_settings-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"S4 class for the vine settings — vine_settings-class","text":"train_size Positive count specifying training data size. refit_size Positive count specifying many periods vine used family_set Character vector specifying family copulas used. possible choices see rvinecopulib::bicop. Note conditional sampling just parametric copula families possible use family arguments tll. vine_type character value specifies vine class fitted. Possible choices right now rvine (regular vine) dvine (drawable vine).","code":""},{"path":[]},{"path":"https://emanuelsommer.github.io/portvine/reference/vine_settings-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"S4 class for the vine settings — vine_settings-class","text":"","code":"# the most basic initialization vine_settings(100, 25) #> An object of class <vine_settings> #> train_size: 100  #> refit_size: 25  #> family_set: all  #> vine_type: rvine  # some individual note vine_settings(   train_size = 100, refit_size = 20,   family_set = c(\"gumbel\", \"joe\"),   vine_type = \"dvine\" ) #> An object of class <vine_settings> #> train_size: 100  #> refit_size: 20  #> family_set: gumbel joe  #> vine_type: dvine"},{"path":"https://emanuelsommer.github.io/portvine/news/index.html","id":"portvine-0009000","dir":"Changelog","previous_headings":"","what":"portvine 0.0.0.9000","title":"portvine 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
